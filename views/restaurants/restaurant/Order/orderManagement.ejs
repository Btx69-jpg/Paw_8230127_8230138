<!DOCTYPE html>
<html lang="pt-PT">
  <head>
    <meta charset="UTF-8" />
    <title>Gestão de Pedidos</title>
    <link rel="icon" href="/images/Plataform/LogoSite/logo.png" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <%- include('../navBarRest') %>
    <%- include('../../../hero', { title: 'Gestão de Pedidos', content: 'Aqui pode gerir os pedidos dos seus clientes.' }) %>

    <%- include('showOrders') %>

    <%- include('createOrder') %>

    <script>
      const restaurant = "<%= restaurant.name %>";
      const restaurantAddress = "<%= restaurant.address %>";
      let menus = [];
      let selectedItems = [];

      // Carrega encomendas
      fetch(`/restaurants/${restaurant}/orders/getOrders`)
        .then(r => r.json())
        .then(orders => orders.forEach(renderOrderRow));

      // Carrega menus
      fetch(`/restaurants/orders/${restaurant}/orders/getMenus`)
        .then(r => r.json())
        .then(data => {
          menus = data;
          populateMenuSelect();
        });

      function populateMenuSelect() {
        const sel = document.getElementById('menuSelect');
        menus.forEach(menu => {
          const opt = document.createElement('option');
          opt.value = menu._id;
          opt.textContent = menu.name;
          sel.appendChild(opt);
        });
      }

      document.getElementById('menuSelect').addEventListener('change', e => {
        const menuId = e.target.value;
        const menu = menus.find(m => m._id === menuId);
        renderDishes(menu ? menu.dishes : []);
      });

      function renderDishes(dishes) {
        const container = document.getElementById('dishesContainer');
        container.innerHTML = '';
        dishes.forEach(d => {
          const div = document.createElement('div');
          div.className = 'input-group mb-2';
          div.innerHTML = `
            <span class="input-group-text">${d.name} (€${d.price.toFixed(2)})</span>
            <input type="number" min="0" value="0" class="form-control dish-qty" data-id="${d._id}" data-name="${d.name}" data-price="${d.price}" />
            <button class="btn btn-outline-primary add-dish" data-id="${d._id}">Adicionar</button>
          `;
          container.appendChild(div);
          div.querySelector('.add-dish').addEventListener('click', () => addDish(d._id));
        });
      }

      function addDish(id) {
        const input = document.querySelector(`.dish-qty[data-id='${id}']`);
        const qty = parseInt(input.value);
        if (qty > 0) {
          const name = input.dataset.name;
          const price = parseFloat(input.dataset.price);
          selectedItems.push({ product: name, qty, price });
          updateSelectedList();
        }
      }

      function updateSelectedList() {
        const ul = document.getElementById('selectedItemsList');
        ul.innerHTML = '';
        let total = 0;
        selectedItems.forEach((it, idx) => {
          total += it.qty * it.price;
          const li = document.createElement('li');
          li.className = 'list-group-item d-flex justify-content-between align-items-center';
          li.textContent = `${it.product} x${it.qty}`;
          const span = document.createElement('span');
          span.textContent = `€${(it.qty*it.price).toFixed(2)}`;
          li.appendChild(span);
          ul.appendChild(li);
        });
        document.getElementById('totEncomenda').value = total.toFixed(2);
      }

      // Ajusta o campo de morada conforme tipo
      document.getElementById('orderType').addEventListener('change', e => {
        const addr = document.getElementById('addressOrder');
        if (e.target.value === 'pickup') {
          addr.value = restaurantAddress;
          addr.readOnly = true;
        } else {
          addr.value = '';
          addr.readOnly = false;
        }
      });

      // Submit do formulário
      document.getElementById('newOrderForm').addEventListener('submit', ev => {
        ev.preventDefault();
        document.getElementById('itensInput').value = JSON.stringify(selectedItems);
        const data = {
          client: ev.target.client.value,
          addressOrder: ev.target.addressOrder.value,
          itens: selectedItems,
          totEncomenda: parseFloat(ev.target.totEncomenda.value)
        };
        fetch(`/restaurants/${restaurant}/orders`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        })
        .then(r => r.json())
        .then(order => {
          renderOrderRow(order);
          ev.target.reset();
          selectedItems = [];
          updateSelectedList();
        })
        .catch(err => alert('Erro: ' + err.message));
      });

      // Função que cria e anexa a linha (permanece igual)
      function renderOrderRow(order) {
        const tbody = document.getElementById('tbody-' + order.status);
        const tr = document.createElement('tr');
        tr.dataset.id = order._id;
        tr.innerHTML = `
          <td>${order._id}</td>
          <td>${order.totEncomenda.toFixed(2)} €</td>
          <td>
            <select class="form-select form-select-sm status-select">
              <option${order.status === 'Pendente' ? ' selected' : ''}>Pendente</option>
              <option${order.status === 'Expedida' ? ' selected' : ''}>Expedida</option>
              <option${order.status === 'Entregue' ? ' selected' : ''}>Entregue</option>
            </select>
          </td>`;
        tr.querySelector('.status-select').addEventListener('change', e => {
          const novo = e.target.value;
          fetch(`/restaurants/${restaurant}/orders/${order._id}/status`, {
            method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ status: novo })
          })
          .then(r => r.json())
          .then(updated => {
            tr.remove();
            document.getElementById('tbody-' + updated.status).appendChild(tr);
          });
        });
        tbody.appendChild(tr);
      }
    </script>
  </body>
</html>

