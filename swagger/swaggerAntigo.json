{
    "swagger": "3.0.1",
    "info": {
      "description": "Swagger para o trabalho pratico de paw do grupo 26.",
      "version": "1.0.0",
      "title": "Swagger Restaurant API",
      "contact": {
        "email": "8230127@estg.ipp.pt and 8230138@estg.ipp.pt"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api/v1/",
    "tags": [
      {
        "name": "User",
        "description": "Operações sobre user"
      },
      {
        "name": "Restaurant",
        "description": "Representação de um restaurante especifico"
      },
      {
        "name": "Menu",
        "description": "Respresenta as operações ao menu de um restaurante especifico"
      },
      {
        "name": "Dish",
        "description": "Representação de um prato"
      },
      {
        "name": "Order",
        "description": "Representação de uma encomenda"
      },
      {
        "name": "Restaurants",
        "description": "Operações sobre restaurantes"
      },
  
      {
        "name": "Admin",
        "description": "Operações sobre o Admin"
      },
      {
        "name": "Admin/Restaurants",
        "description": "Operacoes do admin com os restuarantes"
      },
      {
        "name": "Admin/Restaurants/ListAprove",
        "description": "Operacoes do admin para a aprovação de restaurantes"
      },
      {
        "name": "Admin/Users",
        "description": "Operacoes do admin com os utilizadores"
      },
      {
        "name": "Admin/Categories",
        "description": "Operacoes do admin com as categorias"
      },
      {
        "name": "Admin/Porções",
        "description": "Operacoes do admin com as porções"
      },
      {
        "name": "Registo de Restaurant",
        "description": "Operações que permitem um utilizador criar um restuarante"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
      "/user/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Id do user a procurar",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get de um utilizador especifico",
          "responses": {
            "200": {
              "description": "User encontrado",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }, 
            "404": {
              "description": "User não encontrado"
            }
          }
        }
      }
    },
    "definitions": {
      "Address": {
        "type": "object",
        "required": ["_id", "street", "postal_code", "city"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "street": {
            "type": "string",
            "maxLength": 250
          },
          "postal_code": {
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{3}$"
          },
          "city": {
            "type": "string",
            "maxLength": 100
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AddressOrder": {
        "type": "object",
        "required": ["_id", "address"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "address": {
            "$ref": "#/definitions/Address"
          },
          "nif": {
            "type": "integer",
            "pattern": "^[0-9]{9}$"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Item": {
        "type": "object",
        "required": ["_id", "item", "portion", "price", "quantity" ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "item": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[\\p{L}\\s]+$"
          },
          "portion": {
            "type": "string",
            "maxLength": 25,
            "pattern": "^[\\p{L}\\s]+$"
          },
          "price": {
            "type": "number",
            "minimum": 0
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FaturaCliente": {
        "type": "object",
        "required": ["_id", "firstName","lastName","phoneNumber", "email"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "firstName": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z\\s]*$"
          },
          "lastName": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z\\s]*$"
          },
          "phoneNumber": {
            "type": "integer",
            "minimum": 100000000,
            "maximum": 999999999
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FaturaRestaurant": {
        "type": "object",
        "required": ["_id", "name","phoneNumber", "email"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "phoneNumber": {
            "type": "integer",
            "minimum": 100000000,
            "maximum": 999999999
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Order": {
        "type": "object",
        "required": ["_id", "date", "client", "restaurant", "addressOrder", "itens", "price", 
        "status", "type"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "client": {
            "$ref": "#/definitions/FaturaCliente"
          },
          "restaurant": {
            "$ref": "#/definitions/FaturaRestaurant"
          },
          "addressOrder": {
            "$ref": "#/definitions/AddressOrder"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Item"
            }
          },
          "price": {
            "type": "number",
            "minimum": 0
          },
          "status": {
            "type": "string",
            "enum": [
              "Pendente",
              "Expedida",
              "Entregue"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "delivery",
              "pickup"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Perfil": {
        "type": "object",
        "required": ["_id", "phoneNumber", "email", "password", "priority", "banned"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "perfilPhoto": {
            "type": "string",
            "default": ""
          },
          "phoneNumber": {
            "type": "integer",
            "minimum": 100000000,
            "maximum": 999999999
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            },
            "default": []
          },
          "historicOrders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            },
            "default": []
          },
          "priority": {
            "type": "string",
            "enum": [
              "Cliente",
              "Admin",
              "Restaurant",
              "Dono",
              "Funcionario"
            ]
          },
          "restaurantIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectId"
            }
          },
          "ownersIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectId"
            }
          },
          "banned": {
            "type": "boolean",
            "default": false
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["_id", "firstName", "lastName", "perfil"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "firstName": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z\\s]*$"
          },
          "lastName": {
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z\\s]*$"
          },
          "perfil": {
            "$ref": "#/definitions/Perfil"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AddressOrder"
            },
            "default": []
          },
          "cart": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            },
            "default": []
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "minimum": "1900-01-01",
            "maximum": "9999-12-31"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
  