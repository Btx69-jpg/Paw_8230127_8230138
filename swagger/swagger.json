{
  "swagger": "2.0",
  "info": {
    "description": "Swagger para o trabalho pratico de paw do grupo 26.",
    "version": "1.0.0",
    "title": "Swagger Restaurant API",
    "contact": {
      "email": "8230127@estg.ipp.pt and 8230138@estg.ipp.pt"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "User",
      "description": "Operações sobre user"
    },
    {
      "name": "User/historicOrder",
      "description": "Operações sobre o historico de encomendas do utilizador"
    }
  ],
  
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retorna todos os utilizadores do site",
        "responses": {
          "200": {
            "description": "Utilizadores encontrados",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }, 
          "404": {
            "description": "User não encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id do utilizador",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["User"],
        "summary": "Get de um utilizador especifico",
        "responses": {
          "200": {
            "description": "User encontrado",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }, 
          "404": {
            "description": "User não encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }, 
      "put": {
        "tags": ["User"],
        "summary": "Atualiza os dados de um utilizador",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Novos campos do utilizador",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            } 
          }
        ],
        "responses": {
          "200": {
            "description": "User eliminado",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }, 
          "404": {
            "description": "User não encontrado"
          },
          "422": {
            "description": "Algum campo está mal preenchido"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Elimina da base de dados um utilizador especifico",
        "responses": {
          "200": {
            "description": "User eliminado",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }, 
          "404": {
            "description": "User não encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/user/{userId}/historicOrder": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id do utilizador",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["User/historicOrder"],
        "summary": "Retorna o historico de encomendas de um utilizador",
        "responses": {
          "200": {
            "description": "Historico de Encomenda encontrado",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderUser"
              }
            }
          }, 
          "404": {
            "description": "User não encontrado ou utilizador não possui historico de encomendas"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/user/{userId}/historicOrder/search": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id do utilizador",
          "type": "string"
        },
        {
          "name": "nameRest",
          "in": "query",
          "required": false,
          "maxLength": 100,
          "pattern": "^(?!.*[\\/]).+$",
          "description": "Nome do restaurante onde a encomenda foi realizada",
          "type": "string"
        },
        {
          "name": "price",
          "in": "query",
          "required": false,
          "description": "Preço mínimo da encomenda",
          "type": "number",
          "minimum": 0.01
        },
        {
          "name": "dateFrom",
          "in": "query",
          "required": false,
          "description": "Data inicial do intervalo (≤ hoje e ≤ dateTo — validar no código)",
          "type": "string",
          "format": "date"
        },
        {
          "name": "dateTo",
          "in": "query",
          "required": false,
          "description": "Data final do intervalo (≥ 2000-01-01 e ≥ dateFrom — validar no código)",
          "type": "string",
          "format": "date",
          "minimum": "2000-01-01"
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "description": "Critério de ordenação",
          "type": "string",
          "enum": ["nameAsc","nameDesc","priceAsc","priceDesc","dateAsc","dateDesc"]
        }
      ],
      "get": {
        "tags": ["User/historicOrder"],
        "summary": "Retorna o historico de encomendas do utilizador, de acordo com o filtro e criterio de ordenação aplicado",
        "responses": {
          "200": {
            "description": "Historico de Encomenda encontrado",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderUser"
              }
            }
          }, 
          "422": {
            "description": "Algum dos campos foi preenchido de maneira incorreta"
          },
          "404": {
            "description": "Utilizador não encontrado ou encomenda não existe"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/user/{userId}/historicOrder/{orderId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id do utilizador",
          "type": "string"
        },
        {
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "ID da encomenda a pesquisar",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["User/historicOrder"],
        "summary": "Retorna uma encomenda especifica do historico de encomendas de um utilizador",
        "responses": {
          "200": {
            "description": "Historico de Encomenda encontrado",
            "schema": {
              "$ref": "#/definitions/OrderUser" 
            }
          }, 
          "404": {
            "description": "User não encontrado ou encomenda não encontrada"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": ["_id", "street", "postal_code", "city"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "street": {
          "type": "string",
          "maxLength": 250
        },
        "postal_code": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{3}$"
        },
        "city": {
          "type": "string",
          "maxLength": 100
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AddressOrder": {
      "type": "object",
      "required": ["_id", "address"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "nif": {
          "type": "integer",
          "pattern": "^[0-9]{9}$"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Item": {
      "type": "object",
      "required": ["_id", "item", "portion", "price", "quantity" ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "item": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[\\p{L}\\s]+$"
        },
        "portion": {
          "type": "string",
          "maxLength": 25,
          "pattern": "^[\\p{L}\\s]+$"
        },
        "price": {
          "type": "number",
          "minimum": 0
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FaturaCliente": {
      "type": "object",
      "required": ["_id", "firstName","lastName","phoneNumber", "email"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "lastName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "phoneNumber": {
          "type": "integer",
          "minimum": 100000000,
          "maximum": 999999999
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 50
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FaturaRestaurant": {
      "type": "object",
      "required": ["_id", "name","phoneNumber", "email"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "maxLength": 100
        },
        "phoneNumber": {
          "type": "integer",
          "minimum": 100000000,
          "maximum": 999999999
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 50
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Order": {
      "type": "object",
      "required": ["_id", "date", "client", "restaurant", "addressOrder", "itens", "price", 
      "status", "type"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "client": {
          "$ref": "#/definitions/FaturaCliente"
        },
        "restaurant": {
          "$ref": "#/definitions/FaturaRestaurant"
        },
        "addressOrder": {
          "$ref": "#/definitions/AddressOrder"
        },
        "itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "price": {
          "type": "number",
          "minimum": 0
        },
        "status": {
          "type": "string",
          "enum": [
            "Pendente",
            "Expedida",
            "Entregue"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "delivery",
            "pickup"
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrderUser": {
      "type": "object",
      "required": ["_id", "date", "restaurant", "addressOrder", "itens", "price", 
      "status", "type"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "restaurant": {
          "$ref": "#/definitions/FaturaRestaurant"
        },
        "addressOrder": {
          "$ref": "#/definitions/AddressOrder"
        },
        "itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "price": {
          "type": "number",
          "minimum": 0
        },
        "status": {
          "type": "string",
          "enum": [
            "Pendente",
            "Expedida",
            "Entregue"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "delivery",
            "pickup"
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Perfil": {
      "type": "object",
      "required": ["_id", "phoneNumber", "email", "password", "priority", "banned"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "perfilPhoto": {
          "type": "string",
          "default": ""
        },
        "phoneNumber": {
          "type": "integer",
          "minimum": 100000000,
          "maximum": 999999999
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 50
        },
        "password": {
          "type": "string",
          "minLength": 8
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "default": []
        },
        "historicOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "default": []
        },
        "priority": {
          "type": "string",
          "enum": [
            "Cliente",
            "Admin",
            "Restaurant",
            "Dono",
            "Funcionario"
          ]
        },
        "restaurantIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "objectId"
          }
        },
        "ownersIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "objectId"
          }
        },
        "banned": {
          "type": "boolean",
          "default": false
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["_id", "firstName", "lastName", "perfil"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "lastName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "perfil": {
          "$ref": "#/definitions/Perfil"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressOrder"
          },
          "default": []
        },
        "cart": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderUser"
          },
          "default": []
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "minimum": "1900-01-01",
          "maximum": "9999-12-31"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }, 
    "UserUpdate": {
      "type": "object",
      "required": ["firstName", "lastName", "perfil"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "lastName": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z\\s]*$"
        },
        "perfil": {
          "phoneNumber": {
            "type": "integer",
            "minimum": 100000000,
            "maximum": 999999999
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50
          },
          "perfilPhoto": {
            "type": "string",
            "default": ""
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressOrder"
          },
          "default": []
        },
        "birthdate": {
          "type": "string",
          "format": "date",
          "minimum": "1900-01-01",
          "maximum": "9999-12-31"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}